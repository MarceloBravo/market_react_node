import Options from '../../common/options';
import _Transaction from './transaction';
import _DeferredTransaction from './deferred_transaction';
import _MallTransaction from './mall_transaction';
import _MallDeferredTransaction from './mall_deferred_transaction';
declare module WebpayPlus {
    /**
     * Contains methods used to create, commit, refund and capture Transactions.
     */
    const Transaction: typeof _Transaction;
    /**
     * Contains methods used to create, commit, refund and capture deferred Transactions.
     */
    const DeferredTransaction: typeof _DeferredTransaction;
    /**
     * Contains methods used to create, commit, refund and capture Mall Transactions.
     */
    const MallTransaction: typeof _MallTransaction;
    /**
     * Contains methods used to create, commit, refund and capture Mall deferred Transactions.
     */
    const MallDeferredTransaction: typeof _MallDeferredTransaction;
    /**
     * Used to authenticate against the API, currently configured Commerce Code.
     */
    let commerceCode: string;
    /**
     * Used to authenticate against the API, currently configured Api Key.
     */
    let apiKey: string;
    /**
     * Used to select the corresponding API URL, currently configured Environment
     */
    let environment: string;
    /**
     * @returns currently configured Commerce Code and Api Key
     */
    const getDefaultOptions: () => Options;
    /**
     * This methods configures the module to point to the Production Environment with the given params.
     * @param _commerceCode Commerce Code given by Transbank when contracting the product
     * @param _apiKey Api Key given by Transbank when you sucessfuly validate your integration
     */
    const configureForProduction: (_commerceCode: string, _apiKey: string) => void;
    /**
     * This methods configures the module to point to the Integration Environment with the given params.
     * You can check use the credentials provided in the official docs.
     * https://transbankdevelopers.cl/documentacion/como_empezar#codigos-de-comercio
     * @param _commerceCode Commerce Code given by Transbank.
     * @param _apiKey Api Key given by Transbank.
     */
    const configureForIntegration: (_commerceCode: string, _apiKey: string) => void;
    /**
     * This methods configures the module to point to the Production Environment with the given params.
     * @param _commerceCode Commerce Code given by Transbank when contracting the product
     * @param _apiKey Api Key given by Transbank when you sucessfuly validate your integration
     *
     * @deprecated Use the new {@link configureForProduction} method instead
     */
    const configureWebpayPlusForProduction: (_commerceCode: string, _apiKey: string) => void;
    /**
     * This method configures the module to use Webpay Plus in the Integration environment.
     */
    const configureWebpayPlusForTesting: () => void;
    /**
     * This method configures the module to use Webpay Plus Deferred in the Integration environment.
     */
    const configureWebpayPlusDeferredForTesting: () => void;
    /**
     * This method configures the module to use Webpay Plus Mall in the Integration environment.
     */
    const configureWebpayPlusMallForTesting: () => void;
    /**
     * This method configures the module to use Webpay Plus Mall Deferred in the Integration environment.
     */
    const configureWebpayPlusMallDeferredForTesting: () => void;
}
export default WebpayPlus;
