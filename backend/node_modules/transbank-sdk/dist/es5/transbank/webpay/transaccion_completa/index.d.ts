import Options from '../../common/options';
import _Transaction from './transaction';
import _DeferredTransaction from './deferred_transaction';
import _MallTransaction from './mall_transaction';
import _MallDeferredTransaction from './mall_deferred_transaction';
declare module TransaccionCompleta {
    /**
     * Contains methods used to create, commit, refund and capture Transactions.
     */
    const Transaction: typeof _Transaction;
    /**
     * Contains methods used to create, commit, refund and capture deferred Transactions.
     */
    const DeferredTransaction: typeof _DeferredTransaction;
    /**
     * Contains methods used to create, commit, refund and capture Mall Transactions.
     */
    const MallTransaction: typeof _MallTransaction;
    /**
     * Contains methods used to create, commit, refund and capture Mall deferred Transactions.
     */
    const MallDeferredTransaction: typeof _MallDeferredTransaction;
    /**
     * Used to authenticate against the API, currently configured Commerce Code.
     */
    let commerceCode: string;
    /**
     * Used to authenticate against the API, currently configured Api Key.
     */
    let apiKey: string;
    /**
     * Used to select the corresponding API URL, currently configured Environment
     */
    let environment: string;
    /**
     * @returns Configured Commerce Code and Api Key
     */
    const getDefaultOptions: () => Options;
    /**
     * This methods configures the module to point to the Production Environment with the given params.
     * @param _commerceCode Commerce Code given by Transbank when contracting the product
     * @param _apiKey Api Key given by Transbank when you sucessfuly validate your integration
     */
    const configureForProduction: (_commerceCode: string, _apiKey: string) => void;
    /**
     * This methods configures the module to point to the Integration Environment with the given params.
     * You can check use the credentials provided in the official docs.
     * https://transbankdevelopers.cl/documentacion/como_empezar#codigos-de-comercio
     * @param _commerceCode Commerce Code given by Transbank.
     * @param _apiKey Api Key given by Transbank.
     */
    const configureForIntegration: (_commerceCode: string, _apiKey: string) => void;
    /**
     * This method configures the module to use Transaccion Completa in the Integration environment.
     */
    const configureTransaccionCompletaForTesting: () => void;
    /**
     * This method configures the module to use Transaccion Completa without CVV in the Integration environment.
     */
    const configureTransaccionCompletaNoCvvForTesting: () => void;
    /**
     * This method configures the module to use Transaccion Completa deferred in the Integration environment.
     */
    const configureTransaccionCompletaDeferredForTesting: () => void;
    /**
     * This method configures the module to use Transaccion Completa deferred without CVV in the Integration environment.
     */
    const configureTransaccionCompletaDeferredNoCvvForTesting: () => void;
    /**
     * This method configures the module to use Transaccion Completa Mall in the Integration environment.
     */
    const configureTransaccionCompletaMallForTesting: () => void;
    /**
     * This method configures the module to use Transaccion Completa Mall without CVV in the Integration environment.
     */
    const configureTransaccionCompletaMallNoCvvForTesting: () => void;
    /**
     * This method configures the module to use Transaccion Completa Mall deferred in the Integration environment.
     */
    const configureTransaccionCompletaMallDeferredForTesting: () => void;
    /**
     * This method configures the module to use Transaccion Completa Mall deferred without CVV in the Integration environment.
     */
    const configureTransaccionCompletaMallDeferredNoCvvForTesting: () => void;
}
export default TransaccionCompleta;
