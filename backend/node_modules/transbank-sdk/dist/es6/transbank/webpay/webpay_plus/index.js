import Environment from '../common/environment';
import Options from '../../common/options';
import _Transaction from './transaction';
import _DeferredTransaction from './deferred_transaction';
import _MallTransaction from './mall_transaction';
import _MallDeferredTransaction from './mall_deferred_transaction';
var WebpayPlus;
(function (WebpayPlus) {
    const DEFAULT_API_KEY = '579B532A7440BB0C9079DED94D31EA1615BACEB56610332264630D42D0A36B1C';
    /**
     * Contains methods used to create, commit, refund and capture Transactions.
     */
    WebpayPlus.Transaction = _Transaction;
    /**
     * Contains methods used to create, commit, refund and capture deferred Transactions.
     */
    WebpayPlus.DeferredTransaction = _DeferredTransaction;
    /**
     * Contains methods used to create, commit, refund and capture Mall Transactions.
     */
    WebpayPlus.MallTransaction = _MallTransaction;
    /**
     * Contains methods used to create, commit, refund and capture Mall deferred Transactions.
     */
    WebpayPlus.MallDeferredTransaction = _MallDeferredTransaction;
    /**
     * Used to authenticate against the API, currently configured Commerce Code.
     */
    WebpayPlus.commerceCode = '597055555532';
    /**
     * Used to authenticate against the API, currently configured Api Key.
     */
    WebpayPlus.apiKey = DEFAULT_API_KEY;
    /**
     * Used to select the corresponding API URL, currently configured Environment
     */
    WebpayPlus.environment = Environment.Integration;
    /**
     * @returns currently configured Commerce Code and Api Key
     */
    WebpayPlus.getDefaultOptions = () => {
        return new Options(WebpayPlus.commerceCode, WebpayPlus.apiKey, WebpayPlus.environment);
    };
    /**
     * This methods configures the module to point to the Production Environment with the given params.
     * @param _commerceCode Commerce Code given by Transbank when contracting the product
     * @param _apiKey Api Key given by Transbank when you sucessfuly validate your integration
     */
    WebpayPlus.configureForProduction = (_commerceCode, _apiKey) => {
        WebpayPlus.commerceCode = _commerceCode;
        WebpayPlus.apiKey = _apiKey;
        WebpayPlus.environment = Environment.Production;
    };
    /**
     * This methods configures the module to point to the Integration Environment with the given params.
     * You can check use the credentials provided in the official docs.
     * https://transbankdevelopers.cl/documentacion/como_empezar#codigos-de-comercio
     * @param _commerceCode Commerce Code given by Transbank.
     * @param _apiKey Api Key given by Transbank.
     */
    WebpayPlus.configureForIntegration = (_commerceCode, _apiKey) => {
        WebpayPlus.commerceCode = _commerceCode;
        WebpayPlus.apiKey = _apiKey;
        WebpayPlus.environment = Environment.Integration;
    };
    /**
     * This methods configures the module to point to the Production Environment with the given params.
     * @param _commerceCode Commerce Code given by Transbank when contracting the product
     * @param _apiKey Api Key given by Transbank when you sucessfuly validate your integration
     *
     * @deprecated Use the new {@link configureForProduction} method instead
     */
    WebpayPlus.configureWebpayPlusForProduction = (_commerceCode, _apiKey) => {
        WebpayPlus.configureForProduction(_commerceCode, _apiKey);
    };
    /**
     * This method configures the module to use Webpay Plus in the Integration environment.
     */
    WebpayPlus.configureWebpayPlusForTesting = () => {
        WebpayPlus.commerceCode = '597055555532';
        WebpayPlus.apiKey = DEFAULT_API_KEY;
        WebpayPlus.environment = Environment.Integration;
    };
    /**
     * This method configures the module to use Webpay Plus Deferred in the Integration environment.
     */
    WebpayPlus.configureWebpayPlusDeferredForTesting = () => {
        WebpayPlus.commerceCode = '597055555540';
        WebpayPlus.apiKey = DEFAULT_API_KEY;
        WebpayPlus.environment = Environment.Integration;
    };
    /**
     * This method configures the module to use Webpay Plus Mall in the Integration environment.
     */
    WebpayPlus.configureWebpayPlusMallForTesting = () => {
        WebpayPlus.commerceCode = '597055555535';
        WebpayPlus.apiKey = DEFAULT_API_KEY;
        WebpayPlus.environment = Environment.Integration;
    };
    /**
     * This method configures the module to use Webpay Plus Mall Deferred in the Integration environment.
     */
    WebpayPlus.configureWebpayPlusMallDeferredForTesting = () => {
        WebpayPlus.commerceCode = '597055555581';
        WebpayPlus.apiKey = DEFAULT_API_KEY;
        WebpayPlus.environment = Environment.Integration;
    };
})(WebpayPlus || (WebpayPlus = {}));
export default WebpayPlus;
