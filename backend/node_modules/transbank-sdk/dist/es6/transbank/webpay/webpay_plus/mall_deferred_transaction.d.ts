import Options from '../../common/options';
declare const MallDeferredTransaction: {
    /**
     * Capture a deferred transaction.
     * Your commerce code must be configured to support deferred capture.
     * @param token Unique transaction identifier
     * @param commerceCode Child commerce code, used to indetify the correct child transaction
     * @param buyOrder Child buy order, used to identify the correct child transaction.
     * @param authorizationCode Child transaction's authorization code
     * @param amount Amount to be captured
     * @param options (Optional) You can pass options to use a custom configuration for this request.
     */
    capture: (token: string, commerceCode: string, buyOrder: string, authorizationCode: string, amount: number, options?: Options) => Promise<any>;
    create: (buyOrder: string, sessionId: string, returnUrl: string, details: import("../common/transaction_detail").default[], options?: Options) => Promise<any>;
    refund: (token: string, buyOrder: string, commerceCode: string, amount: number, options?: Options) => Promise<any>;
    commit: (token: string, options?: Options) => Promise<any>;
    status: (token: string, options?: Options) => Promise<any>;
};
export default MallDeferredTransaction;
